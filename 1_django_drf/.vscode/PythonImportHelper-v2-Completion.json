[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "rest_framework",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "rest_framework",
        "description": "rest_framework",
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http.response",
        "description": "django.http.response",
        "isExtraImport": true,
        "detail": "django.http.response",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "JSONRenderer",
        "importPath": "rest_framework.renderers",
        "description": "rest_framework.renderers",
        "isExtraImport": true,
        "detail": "rest_framework.renderers",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "app1",
        "description": "app1",
        "isExtraImport": true,
        "detail": "app1",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pro1.app1.migrations.0001_initial",
        "description": "pro1.app1.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Student',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=80)),",
        "detail": "pro1.app1.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "StudentAdmin",
        "kind": 6,
        "importPath": "pro1.app1.admin",
        "description": "pro1.app1.admin",
        "peekOfCode": "class StudentAdmin(admin.ModelAdmin):\n    list_display = ['id', 'name', 'roll', 'city']\nadmin.site.register(Student, StudentAdmin)",
        "detail": "pro1.app1.admin",
        "documentation": {}
    },
    {
        "label": "App1Config",
        "kind": 6,
        "importPath": "pro1.app1.apps",
        "description": "pro1.app1.apps",
        "peekOfCode": "class App1Config(AppConfig):\n    name = 'app1'",
        "detail": "pro1.app1.apps",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "pro1.app1.models",
        "description": "pro1.app1.models",
        "peekOfCode": "class Student(models.Model):\n    name = models.CharField(max_length=80)\n    roll = models.IntegerField()\n    city = models.CharField(max_length=80)",
        "detail": "pro1.app1.models",
        "documentation": {}
    },
    {
        "label": "StudentSerializer",
        "kind": 6,
        "importPath": "pro1.app1.serializers",
        "description": "pro1.app1.serializers",
        "peekOfCode": "class StudentSerializer(serializers.Serializer):\n    id = serializers.IntegerField()\n    name = serializers.CharField(max_length=80)\n    roll = serializers.IntegerField()\n    city = serializers.CharField(max_length=80)",
        "detail": "pro1.app1.serializers",
        "documentation": {}
    },
    {
        "label": "student_details",
        "kind": 2,
        "importPath": "pro1.app1.views",
        "description": "pro1.app1.views",
        "peekOfCode": "def student_details(request, id):\n    stu = Student.objects.get(id=id)\n    serializer = StudentSerializer(stu)\n    # json_data = JSONRenderer().render(serializer.data)\n    # return HttpResponse(json_data, content_type=\"application/json\")\n    return JsonResponse(serializer.data, safe=True)\n# all students data  queryset\ndef student_list(request):\n    stu = Student.objects.all()\n    print(type(stu))",
        "detail": "pro1.app1.views",
        "documentation": {}
    },
    {
        "label": "student_list",
        "kind": 2,
        "importPath": "pro1.app1.views",
        "description": "pro1.app1.views",
        "peekOfCode": "def student_list(request):\n    stu = Student.objects.all()\n    print(type(stu))\n    serializer = StudentSerializer(stu, many=True)\n    print(type(serializer))\n    json_data = JSONRenderer().render(serializer.data)\n    print(type(json_data))\n    return HttpResponse(json_data, content_type=\"application/json\")",
        "detail": "pro1.app1.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "pro1.pro1.asgi",
        "description": "pro1.pro1.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "pro1.pro1.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '%mtyg*!ic=9e!js_=iti9dafn2wn-4tyuf%4%0y7*+m!mwo@2+'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "SECRET_KEY = '%mtyg*!ic=9e!js_=iti9dafn2wn-4tyuf%4%0y7*+m!mwo@2+'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'app1'\n]",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'pro1.urls'",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "ROOT_URLCONF = 'pro1.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "WSGI_APPLICATION = 'pro1.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = '/static/'",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = '/static/'",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = '/static/'",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = '/static/'",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = '/static/'",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "pro1.pro1.settings",
        "description": "pro1.pro1.settings",
        "peekOfCode": "STATIC_URL = '/static/'",
        "detail": "pro1.pro1.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "pro1.pro1.urls",
        "description": "pro1.pro1.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('stuinfo/<int:id>', views.student_details),\n    path('stulist/', views.student_list),\n]",
        "detail": "pro1.pro1.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "pro1.pro1.wsgi",
        "description": "pro1.pro1.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "pro1.pro1.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "pro1.manage",
        "description": "pro1.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'pro1.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "pro1.manage",
        "documentation": {}
    },
    {
        "label": "url",
        "kind": 5,
        "importPath": "front_End",
        "description": "front_End",
        "peekOfCode": "url = \"http://127.0.0.1:8000/stulist/\"\ndata = requests.get(url=url)\ndata_in_json = data.json()\nprint(data_in_json)",
        "detail": "front_End",
        "documentation": {}
    },
    {
        "label": "data",
        "kind": 5,
        "importPath": "front_End",
        "description": "front_End",
        "peekOfCode": "data = requests.get(url=url)\ndata_in_json = data.json()\nprint(data_in_json)",
        "detail": "front_End",
        "documentation": {}
    },
    {
        "label": "data_in_json",
        "kind": 5,
        "importPath": "front_End",
        "description": "front_End",
        "peekOfCode": "data_in_json = data.json()\nprint(data_in_json)",
        "detail": "front_End",
        "documentation": {}
    }
]